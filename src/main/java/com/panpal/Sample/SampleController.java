// package com.panpal;

// import org.springframework.beans.factory.annotation.Autowired;
// import org.springframework.web.bind.annotation.RestController;
// import org.springframework.web.bind.annotation.GetMapping;
// import org.springframework.web.bind.annotation.PostMapping;
// import org.springframework.web.bind.annotation.RequestMapping;
// import org.springframework.web.bind.annotation.RequestParam;
// import org.springframework.web.bind.annotation.RequestBody;
// import org.springframework.web.bind.annotation.ResponseBody;

// import com.panpal.RequestInfo;

// @CrossOrigin(origins = "http://localhost:3000")// React starts at port 3000
// @RestController	// This means that this class is a RestController
// @RequestMapping(path="/samples") // This means URL's start with /sample (after Application path)
// public class SampleController {
// 	@Autowired // This means to get the bean called userRepository
// 			   // Which is auto-generated by Spring, we will use it to handle the data
// 	private SampleRepository SampleRepository;

// 	@PostMapping(path="") // Map ONLY POST Requests
// 	public @ResponseBody String addNewSample (@RequestParam String field1
// 			, @RequestParam String field2) {
// 		// @ResponseBody means the returned String is the response, not a view name
// 		// @RequestParam means it is a parameter from the GET or POST request

// 		Sample s = new Sample();
// 		n.setField1(field1);
// 		n.setField2(field2);
// 		sampleRepository.save(n);
// 		return "Sample Saved";
// 	}

// 	@GetMapping(path="") // GET request on "http://localhost:8000/samples"
// 	public @ResponseBody Iterable<User> getAllSamples() {
// 		// This returns a JSON or XML with the users
// 		return sampleRepository.findAll();
// 	}
// }
